version: '2.1'
services:
  openmrs-referenceapplication-mysql:
    restart: "always"
    image: mysql:5.6
    command: "mysqld --character-set-server=utf8 --collation-server=utf8_general_ci"
    environment:
      MYSQL_DATABASE: ${MYSQL_DB:-openmrs}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-Admin123}
      MYSQL_USER: ${MYSQL_USER:-openmrs}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-Admin123}
    ports:
      - "3306:3306"
    healthcheck:
      test: "exit 0"
    volumes:
      - openmrs-referenceapplication-mysql-data:/var/lib/mysql
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
#      - web-root:/var/www/openmrs/working_openmrs
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    networks:
      - app-network
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
 #     - web-root:/var/www/openmrs/working_openmrs
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/openmrs/working_openmrs --email desiremukunzi@gmail.com --agree-tos --no-eff-email --staging -d patholar.com
  openmrs-referenceapplication:
    restart: "always"
    image: openmrs/openmrs-reference-application-distro:qa
    depends_on:
      - openmrs-referenceapplication-mysql
    ports:
      - "8080:8080"
      - "443:8080"
    environment:
      DB_DATABASE: ${MYSQL_DB:-openmrs}
      DB_HOST: openmrs-referenceapplication-mysql
      DB_USERNAME: ${MYSQL_USER:-openmrs}
      DB_PASSWORD: ${MYSQL_PASSWORD:-Admin123}
      DB_CREATE_TABLES: 'true'
      DB_AUTO_UPDATE: 'true'
      MODULE_WEB_ADMIN: 'true'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs/"]
      timeout: 20s
    volumes:
      - openmrs-referenceapplication-data:/usr/local/tomcat/.OpenMRS/
      - /usr/local/tomcat/.OpenMRS/modules/ # do not store modules in data
      - /usr/local/tomcat/.OpenMRS/owa/ # do not store owa in data
volumes:
   openmrs-referenceapplication-mysql-data:
   openmrs-referenceapplication-data:
   certbot-etc:
   certbot-var:
   web-root:
    driver: local
    driver_opts:
      type: none
      device: /var/www/openmrs/working_openmrs/dockerOpen/none
      o: bind
networks:
  app-network:
    driver: bridge
